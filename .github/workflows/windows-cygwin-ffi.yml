name: build-windows-ffi

on:
  workflow_dispatch:
    inputs:
      cygwin_platform:
        description: "platform"
        required: false
        default: ""
      add_cygwin_packages:
        description: "add cygwin packages"
        required: false
        default: ""
      swoole_version:
        description: "swoole version"
        required: false
        default: ""
  # push:
  # pull_request:

env:
  LIB_CYGWIN_PLATFORM: x64
  LIB_CYGWIN_PACKAGES: make wget tar libtool re2c bison gcc-g++ autoconf automake openssl libpcre2-devel libssl-devel libcurl-devel libxml2-devel libxslt-devel libgmp-devel ImageMagick libpng-devel libjpeg-devel libfreetype-devel libwebp-devel libsqlite3-devel zlib-devel libbz2-devel liblz4-devel liblzma-devel libzip-devel libicu-devel libonig-devel libcares-devel libsodium-devel libyaml-devel libMagick-devel libzstd-devel libbrotli-devel libreadline-devel libintl-devel libpq-devel libssh2-devel libidn2-devel libffi-devel gettext-devel coreutils openssl-devel zip unzip
  LIB_SWOOLE_VERSION: 4.8.13

jobs:
  windows-cygwin:
    if: 1
    runs-on: windows-latest

    env:
      CYGWIN_PLATFORM: `${{ (github.event.inputs && github.event.inputs.cygwin_platform) || LIB_CYGWIN_PLATFORM }}`
      CYGWIN_PACKAGES: `${{ LIB_CYGWIN_PACKAGES }} ${{ (github.event.inputs && github.event.inputs.add_cygwin_packages) }}`
      SWOOLE_VERSION: `${{ (github.event.inputs && github.event.inputs.swoole_version) || LIB_SWOOLE_VERSION }}`

    steps:
      - name: Prepare git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          ipconfig
      - uses: actions/checkout@v3
      - name: Prepare submodule
        run: |
          git submodule update --init
      - name: Cache cygwin packages
        id: cache-cygwin
        uses: actions/cache@v3
        env:
          cache-name: cache-cygwin-packages
        with:
          path: C:/cygwin-packages
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Install deps
        uses: cygwin/cygwin-install-action@v3
        with:
          platform: ${{ env.CYGWIN_PLATFORM }}
          packages: ${{ env.CYGWIN_PACKAGES }}
      - name: Install re2c
        run: |
          bash ./sapi/scripts/cygwin/install-re2c.sh
      - name: Configure
        run: |
          uname -a
          # git config --global --add safe.directory /cygdrive/d/a/swoole-cli/swoole-cli
          # git submodule update --init

          cygcheck -c -d

          bash ./sapi/scripts/cygwin/cygwin-config-ext.sh
          bash ./sapi/scripts/cygwin/cygwin-config.sh

      - name: Build
        run: |
          bash ./sapi/scripts/cygwin/cygwin-build.sh
          ./bin/swoole-cli -v

      - name: Archive
        run: |
          bash ./sapi/scripts/cygwin/cygwin-archive.sh
      - name: production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cygwin-${{ env.CYGWIN_PLATFORM }}-swoole-cli-${{ env.SWOOLE_VERSION }}-dist
          path: |
            bin/swoole-cli.exe

      - name: gh release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: swoole-cli-*-cygwin-x64.zip
          draft: true
          prerelease: true
